<!DOCTYPE html>
<html>
<head>
  <title>Iceman</title>
  <link rel='stylesheet' href='game.css'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" href="/IMG_1486.png" />
  <link rel="apple-touch-icon" sizes="192x192" href="IMG_1486.png"> 
  <link rel="manifest" href="/manifest.json">
  <meta name="mobile-web-app-capable" content="yes">
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <style>
    #play-container {
      width: 100vw;
      height: 100%;
      frameborder: 0;
      border: 0;
    }
    section {
      width: 100%;
      height: 100vh;
    }
  </style>
</head>
<body>
  <div class="topnav">
    <a href="/index.html">Home</a>
    <a class="active" href="/games.html">Games</a>
    <a href="/proxy.html">Proxys</a>
    <a href="/other.html">Other</a>
  </div>
 
  <iframe frameborder="0" id="gameFrame"></iframe>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-md5/2.19.0/js/md5.min.js"></script>
  <script>
    async function checkPasscode() {
        const enteredPasscode = localStorage.getItem("enteredPasscode");
        
        if (enteredPasscode) {
            const hashedPasscode = md5(enteredPasscode).toString();
            try {
                const response = await fetch("https://raw.githubusercontent.com/MCRed2024/urlfetcher/main/fetcher.txt");
                const rawText = await response.text();

                // Compare hashedPasscode with fetched passcode
                if (hashedPasscode === rawText.trim()) {
                 sessionStorage.setItem("accessStatus", "Access granted.");
                } else {
                    sessionStorage.setItem("accessStatus", "Access denied. Incorrect passcode.");
                    window.location.href = "index.html";
                }
            } catch (error) {
                sessionStorage.setItem("accessStatus", "Access denied due to fetch error.");
                window.location.href = "index.html";
            }
        } else {
            sessionStorage.setItem("accessStatus", "Access denied. No passcode found.");
            window.location.href = "index.html";
        }
    }
    checkPasscode();
    // Unique identifier for this game page
    var pageID = 'mcred2024.github.io/territorial.io'; // Include the full URL here

    // Retrieve entered passcode from localStorage
    var enteredPasscode = localStorage.getItem('enteredPasscode');
    var hashedEnteredPasscode = md5(enteredPasscode);

    // Initialize play counter using the unique pageID
    var playCount = localStorage.getItem('playCount_' + pageID) || 0;
    playCount = parseInt(playCount);

    // Function to update play count display
    function updatePlayCount() {
      let countText;
      if (playCount === 0) {
        countText = "You have not played this game yet.";
      } else if (playCount === 1) {
        countText = "You have played this game 1 time.";
      } else {
        countText = "You have played this game " + playCount + " times.";
      }
      return `<div id='play-count' style='font-size: 14px; color: blue; text-align: center; margin-top: 5px;'>${countText}</div>`;
    }

    // Fetch the hashed passcode from the raw GitHub content
    async function fetchHashedPasscode() {
      let response = await fetch('https://raw.githubusercontent.com/MCRed2024/urlfetcher/main/fetcher.txt');
      let hashedPassword = await response.text();
      return hashedPassword.trim();
    }

    // Set the srcdoc attribute of the iframe based on passcode verification
    fetchHashedPasscode().then(hashedPassword => {
      var passcodeValid = hashedEnteredPasscode === hashedPassword;

      document.getElementById('gameFrame').srcdoc = `
        <style>
          #play {
            color: blue;
            text-align: center;
            text-decoration: none;
            font-family: 'arial';
            font-size: 20px;
            display: ${passcodeValid ? 'block' : 'none'};
            margin-bottom: 10px;
          }
        </style>
        <div style='text-align: center;'>
          <a id='play' href='https://${pageID}'><h1>PLAY</h1></a>
          ${updatePlayCount()}
        </div>`;
    });

    // Add event listener for the play button
    document.getElementById('gameFrame').addEventListener('load', function() {
      var playButton = document.getElementById('gameFrame').contentWindow.document.getElementById('play');
      
      if (playButton) {
        playButton.addEventListener('click', function() {
          playCount += 1;
          localStorage.setItem('playCount_' + pageID, playCount);
          document.getElementById('gameFrame').contentWindow.document.getElementById('play-count').innerHTML = updatePlayCount();
        });
      }
    });
  </script>
</body>
</html>
